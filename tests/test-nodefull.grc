int main() {
    // NEED TO TEST NODE NEIGHBORS

    // create graph with 2 nodes and test the functions 
    Graph g = createGraph(100);
    String greeting = "Hello";
    String nodedata1 = "noded1";
    String nodedata2 = "noded2";
    Node node1 = g.createNode(nodedata1);
    Node node2 = g.createNode(nodedata2);
    bool success = False;
    
    // test data function 
    if ((node1.data() == "noded1") && (node2.data() == "noded2")) {
        success = True;
    }
    
    // test update data function 
    node1 = node1.updateData(greeting);
    if (node1.data() != "Hello") {
        success = False; 
    }
    
    // test visited function, that nodes are initialized to false
    if (node1.visited()) {
        success = False;
    }
    
    // test update visited 
    node1 = node1.updateVisited(True);
    if (!node1.visited()) {
        success = False;
    }
    
    // test nodeequals
    if (!node1.nodeEquals(node1)) {
        success = False;
    }

    if (node1.nodeEquals(node2)) {
        success = False; 
    }
    // test the 4 cost functions
    if (node1.cost() != 0) {
        success = False;
    }
    node1.incrementCost();
    if (node1.cost() != 1) {
        success = False;
    }
    node1.decrementCost();
    if (node1.cost() != 0) {
        success = False;
    }
    node1.updateCost(5);
    if (node1.cost() != 5) {
        success = False;
    }

    // test setPrec and prec
    node1 = node1.setPrec(node2);
    if (node1.prec().data() != node2.data()) {
        success = False;
    }
    String data1 = node1.prec().data();
    if (data1 != "noded2") {
        success = False;
    } 
    
    // test getEdge
    Edge edge1 = g.addEdge(node1, node2, 1.7);
    Edge edge2 = g.addEdge(node2, node1, 6.8);
    if (!edge1.edgeEquals(node1.getEdge(node2))) {
        success = False;
    }
    if (!edge2.edgeEquals(node2.getEdge(node1))) {
        success = False;
    }
    
    if (success) {
        print("SUCCESS");
    } else {
        print("FAILURE");
    }
}
