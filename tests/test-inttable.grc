int main(){
    bool success = True;

    Graph g = createGraph(10);
    String nodedata1 = "noded1";
    String nodedata2 = "noded2";
    String nodedata3 = "noded3";
    String nodedata4 = "noded4";
    String nodedata5 = "noded5";
    String nodedata6 = "noded6";
    String nodedata7 = "noded7";
    String nodedata8 = "noded8";
    String nodedata9 = "noded9";
    String nodedata10 = "noded10";
    Node node1 = g.createNode(nodedata1);
    Node node2 = g.createNode(nodedata2);
    Node node3 = g.createNode(nodedata3);
    Node node4 = g.createNode(nodedata4);
    Node node5 = g.createNode(nodedata5);
    Node node6 = g.createNode(nodedata6);
    Node node7 = g.createNode(nodedata7);
    Node node8 = g.createNode(nodedata8);
    Node node9 = g.createNode(nodedata9);
    Node node10 = g.createNode(nodedata10);

    IntTable it = createIntTable(5);

    // test insert with collisions
    it._insertInt(node1, 1);
    it._insertInt(node2, 2);
    it._insertInt(node3, 3);
    it._insertInt(node4, 4);
    it._insertInt(node5, 5);
    it._insertInt(node6, 6);
    it._insertInt(node7, 7);
    it._insertInt(node8, 8);
    it._insertInt(node9, 9);
    it._insertInt(node10, 10);
    it._insertInt(node10, 10); // insert same node twice -- node10 appended to end twice without issue

    // test inserting a node from a different graph
    Graph g2 = createGraph(10);
    String nodedata11 = "noded11";
    Node node11 = g2.createNode(nodedata11);
    it._insertInt(node11, 11); // exit(1) ends program so no "success" or "failure" is printed

    // test includes
    if (!it.inInt(node1) || !it.inInt(node7) || !it.inInt(node10)) {
        success = False;
    }
    
    // test get
    double get1 = it._getInt(node1);
    double get8 = it._getInt(node8);
    double get3 = it._getInt(node3);
    if ((get1 != 1.0) || (get8 != 8.0) || (get3 != 3.0)) {
        success = False;
    }
    
    // test delete
    it.deleteInt(node1);
    it.deleteInt(node2);
    it.deleteInt(node3);
    it.deleteInt(node4);
    it.deleteInt(node5);
    it.deleteInt(node6);
    it.deleteInt(node7);
    it.deleteInt(node8);
    it.deleteInt(node9);
    it.deleteInt(node10);
    it.deleteInt(node10); // try deleting same node (added to it twice) twice
    it.deleteInt(node1); // try deleting same node (added to it once) twice

    if (it.inInt(node1)) {
        success = False;
    }
    NodeList keys = it.intKeys();
    if (keys.length_NL() != 0) {
        success = False;
    }
    
    if (success) {
        print("SUCCESS");
    }
    else {
        print("FAILURE");
    }

    return 0;
}