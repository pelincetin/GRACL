void printNodeList(NodeList nl) {
    for (Node n in nl) {
        print(n.data());
    }
}

int main() {
    Graph g;
    Node node1;
    Node node2;
    Node node3;
    Node node4;
    Node node5;
    Node node6;
    Node node7;
    Node node8;
    Edge e1;
    Edge e2;
    Edge e3;
    Edge e4;
    Edge e5;
    Edge e6;
    Edge e7;
    Edge e8;
    Edge e9;
    Edge e10;
    Edge e11;
    NodeList nl1;
    NodeList nl2;
    bool success = True;
    
    g = createGraph(3);
    node1 = g.createNode("A");
    node2 = g.createNode("B");
    node3 = g.createNode("C");
    node4 = g.createNode("D");
    node5 = g.createNode("E");
    node6 = g.createNode("F");
    node7 = g.createNode("G");
    node8 = g.createNode("H");

    nl1 = g.nodes();
    if (!(nl1.length_NL() == 8)) {
        success = False;
    }

    e1 = g.addEdge(node1, node2, 14.0);
    e2 = g.addEdge(node2, node1, 13.0);
    e3 = g.addEdge(node1, node3, 43.0);
    e4 = g.addEdge(node2, node3, 43.0);
    e5 = g.addEdge(node3, node2, 43.0);
    e6 = g.addEdge(node3, node1, 43.0);
    e7 = g.addEdge(node1, node8, 23.0);
    e8 = g.addEdge(node1, node7, 23.0);
    e9 = g.addEdge(node1, node6, 23.0);
    e10 = g.addEdge(node8, node4, 23.0);
    e11 = g.addEdge(node5, node4, 23.0);

    EdgeList el1 = node1.edges();
    if (!(el1.length_EL() == 5)) {
        success = False;
    }

    g.removeNodeGraph(node3);

    nl2 = node1.neighbors();
    if (!(nl2.length_NL() == 4)) {
        success = False;
    }

    el1 = node1.edges();
    if (!(el1.length_EL() == 4)) {
        success = False;
    }

    nl2 = g.nodes();
    if (!(nl2.length_NL() == 7)) {
        success = False;
    }  

    g.removeEdgeGraph(e11);
    el1 = node5.edges();
    if (!el1.empty_EL()) {
        success = False;
    }  

    g.removeNodeGraph(node1);
    g.removeNodeGraph(node2);
    g.removeNodeGraph(node4);
    g.removeNodeGraph(node5);
    g.removeNodeGraph(node6);
    g.removeNodeGraph(node7);
    g.removeNodeGraph(node8);
    nl2 = g.nodes();
    if (!(empty_NL(nl2))) {
        success = False;
    }

    node8 = g.createNode("C");
    node7 = g.createNode("H");
    e11 = g.addEdge(node8, node7, 23.0);

    print(e11.start().data());
    g.removeEdgeGraph(e11);
    print(node7.data());

    if (success) {
        print("SUCCESS");
    } else {
        print("FAILURE");
    }

    return 0;
}
